// clone/misc/form
// Mud收費的調查問卷
// Creat by Shure@tomud.com 2002-04-11
/*************************************
   database structure:
   ([
   id_1 : ([ step_1 : ({choice_1, choice_2,choice_3, ... }),
             step_2 : ({choice_1, choice_2,choice_3, ... }),
             ... ]),
   id_2 : ([ step_1 : ...
             ... ]),
   ... ])
*************************************/

#include <ansi.h>

inherit COMBINED_ITEM;
inherit F_SAVE;

nosave mapping form = ([

        "你接觸文字mud有多長時間了？" : ({
                "一年以下。",
                "兩年以下。",
                "三年以下。",
                "三年以上。" }),
                
        "你現在和文字mud是一種什麼樣的關係？" : ({
                "現在還沉浸在其中的玩家。",
                "曾經很熱情地玩過，但是現在已經淡出了。",
                "曾經很熱情地玩過，但是現在已經膩煩，投身入圖形網絡遊戲的懷抱了。",
                "壓根沒有認真玩過，只是通過其他渠道有些瞭解。",
                "以前是資深的玩家，現在在mud裏擔任巫師。",
                "以前也沒怎麼太深入玩mud，莫名其妙地就當了巫師。" }),
                
        "你玩過現在市場上非常流行的角色扮演類圖形界面的網絡遊戲（如魔力寶貝、傳奇類）嗎？" : ({
                "玩過1-2款，瞭解一點。",
                "熱門的圖形界面的網絡遊戲我都去嘗試過。",
                "我是圖形界面的網絡遊戲的發燒級玩家。",
                "沒有玩過。" }),
                
        "現在圖形界面的網絡遊戲非常流行，這種情況下，你為什麼要選擇玩文字mud？" : ({
                "操作簡便而且直接。",
                "我接觸網絡遊戲就是從玩文字mud開始的，已經習慣並且喜歡上這種方式了。",
                "文字mud與圖形遊戲相比更好玩。",
                "因為文字mud是免費的。",
                "如果上述列項都不符合，請輸入你的看法。" }),
                
        "與圖形界面的網絡遊戲相比，你覺得文字mud的劣勢主要在哪裏？" : ({
                "文字mud上手太難了，熟悉數百的指令以及學習zmud使用就需要很長時間。",
                "文字mud的界面太單調，很難從第一印象吸引新玩家。",
                "文字mud的巫師管理混亂，沒有約束。",
                "現在的文字mud沒有太多的新意，都是老一套的升級打點的方式。",
                "數據沒有保證，一旦因為事故數據損壞或因服務器變動而關站，無可挽回且無處投訴。",
                "後期開發沒有保證，開發與否完全看巫師的心情，沒有督促力量約束。",
                "如果上述列項都不符合，請輸入你的看法。" }),
                
        "如果有下面幾組關係來形容文字mud與圖形網絡遊戲，你覺得哪組關係最合適？" : ({
                "DOS系統和windows系統。",
                "門檻高而體系完備的unix系統和操作直觀但漏洞多的win9x。",
                "同父異母的兩個孩子。",
                "蘿蔔和青菜。",
                "如果上述列項都不符合，請輸入你的看法。" }),
                
        "現在的文字mud需要實現哪些方面的主要變革才是你理想中的情況？" : ({
                "巫師管理透明化，程序開發與遊戲管理者嚴格分開，建立監督體制。",
                "建立持續的後期開發保障，確保遊戲得到及時的更新。",
                "玩家遇到的所有問題和提出的建議在24小時內得到管理層的回覆。",
                "數據確保每日備份，儘量加強安全保障。",
                "儘快開發出新型的遊戲機制。",
                "降低文字mud的門檻，使操作方式儘量簡便直接。",
                "客户端（如tomud或zmud）更加漂亮並且人性化，使之看起來更象一個遊戲。",
                "如果上述列項都不符合，請輸入你的看法。" }),
                
        "如果在上述條件都能滿足的情況下，文字mud採取收費制運行，你會採取什麼態度。" : ({
                "為文字mud交費？老兄你有沒有發燒？",
                "雖然條件不錯，但是現在免費mud的服務也能忍受，還是選擇免費的湊合玩吧。",
                "如果價格低而且交費方便，可以考慮接受。",
                "如果真的可以提供正規而有保證的服務，我會花錢玩我喜歡的mud。",
                "如果上述列項都不符合，請輸入你的看法。" }),
                
        "如果你所在的文字mud新開了收費站，你會在何種情況下去嘗試？" : ({
                "巫師管理盡心而且公正，同時後期開發和bug訂正都很及時。",
                "如果收費合理並且開站正規，有持續保障，我就選擇嘗試。",
                "如果附贈與我所在的mud形象相關的網絡增值服務（如E-mail信箱或主頁空間），我就會選擇。",
                "無論如何我也不會放棄免費站點，去交費玩mud。",
                "除非能把我所在的mud裏的玩家數據都轉檔到新站。",
                "如果上述列項都不符合，請輸入你的看法。" }),
                
        "如果你決定嘗試你所在的mud新開的收費站，你覺得以下何種收費方式可以接受：" : ({
                "按遊戲時間的長短實行點數收費制度。",
                "定量的點數卡換取月費卡。",
                "只可能接受月費卡" }),
                
        "你希望通過何種方式交納費用？" : ({
                "通過匯款方式進行帳户充值。",
                "網上直接劃卡交費，購買虛擬帳號。",
                "在住處附近的書店報刊亭購買遊戲點數卡。",
                "從網上商城購買實物點數卡，送貨上門。" }),        
        ]);

nosave string *k_form  = ({
        "你接觸文字mud有多長時間了？",
        "你現在和文字mud是一種什麼樣的關係？",
        "你玩過現在市場上非常流行的角色扮演類圖形界面的網絡遊戲（如魔力寶貝、傳奇類）嗎？",
        "現在圖形界面的網絡遊戲非常流行，這種情況下，你為什麼要選擇玩文字mud？",
        "與圖形界面的網絡遊戲相比，你覺得文字mud的劣勢主要在哪裏？",
        "如果有下面幾組關係來形容文字mud與圖形網絡遊戲，你覺得哪組關係最合適？",
        "現在的文字mud需要實現哪些方面的主要變革才是你理想中的情況？",
        "如果在上述條件都能滿足的情況下，文字mud採取收費制運行，你會採取什麼態度。",
        "如果你所在的文字mud新開了收費站，你會在何種情況下去嘗試？",
        "如果你決定嘗試你所在的mud新開的收費站，你覺得以下何種收費方式可以接受：",
        "你希望通過何種方式交納費用？",
        });        
        
nosave string *index   = ({ "A", "B", "C", "D", "E", "F", "G", "H" });
nosave mapping answers = ([]);
nosave string *options;
mapping sheet;

void setup();
void set_amount(int i);
int  do_start();
void QA_step( int step );
void decide_choice( string answer, object me, int step );
void do_refer( string yn, object me );
void done_self_opinion( object me, int step, string text );
void query_site( string site, object me );
void save_sheet( object me, mapping answers );

void create()
{
        set_name(YEL"文字MUD調查問卷"NOR, ({ "questionary", "wenjuan" }) );
        set("long", "這是一張有關文字mud發展的調查問卷。\n"
                    "文字mud就是文字表現的網絡遊戲了，説得簡單些，也就是你現在玩的這種遊戲。\n"
                    "如果你關心你所在的世界的未來發展，那麼希望你能坐下來仔細看看錶格上的問題。\n"
                    "要是你準備好了，就請輸入"HIR"start"NOR"指令，開始進入問題回答。\n" );
        set_weight(0);
        set("unit","張");
        set("base_unit","張");
        set_amount(1);
        setup();
}

void setup()
{
        if( !restore() )
                sheet = ([]);
}

void init()
{
        add_action( "do_start", "start" );
}

string query_save_file()
{
        return DATA_DIR + "questionary";
}

void set_amount( int i )
{
        if ( i < 0 )
                error( "set_amount as null!\n" );
        if ( i == 0 )
                destruct( this_object() );
        else
                amount = 1;
}

int do_start()
{
        if( mapp(sheet) && !query("id", undefinedp(sheet[this_player())]) )
        {
                write( "對不起，你已經填寫過調查問卷了，感謝你的一貫支持！\n" );
                destruct( this_object() );
                return 1;
        }
        QA_step(0);
        return 1;
}

void QA_step( int step )
{
        int    i, j;
        string *choice, item;
                
        if ( step >= sizeof( form ) )
        {
                write( "表格已經填寫完畢，請問你是否決定提交？(y/n)" );
                input_to( "do_refer", this_player() );
                return ;
        }
        item   = k_form[step];
        choice = form[item];
        j      = sizeof(choice);
        
        write( HIG + ( step + 1 ) + "、" + item + "\n\n" + NOR );
        for ( i = 0; i < j; i ++ )
                write( index[i] + " " + choice[i] +"\n" );

        write( "\n請輸入你的選擇(A、B、C、D)\n"
               "如果多選請用分號隔開每個選項。(如：A、B、D)\n" );    
        input_to( "decide_choice", this_player(), step );
}

void decide_choice( string answer, object me, int step )
{
        int     i, j, error;
        string *v;
        
        answer  = replace_string( answer, " ", "" ); 
        v = form[ k_form[step] ];
        
        if (strsrch( answer, "、" ) == -1 )
        {
                j = member_array( answer, index );

                if ( j == -1 || ( j + 1 ) > sizeof( v ) )
                {
                        write( "\n請"HIR"正確"NOR"輸入你的選擇(A、B、C、D)\n"
                               "如果多選請用分號隔開每個選項。(如：A、B、D)\n" );                
                        input_to( "decide_choice", me, step );
                        return;
                }
                else
                {
                        if ( v[ j ] == "如果上述列項都不符合，請輸入你的看法。" )
                                me->edit((: done_self_opinion, me, step :));
                        else
                        {
                                options = ({ answer });
                                answers[step] = options;
                                QA_step( step + 1 );
                        }
                        return;
                }
        }
        options = explode( answer, "、" );
        error   = 0;        
        for ( i = 0; i < sizeof( options ); i ++ )
        {
                if ( ( j = member_array( options[i], index ) ) == -1
                     || ( j + 1 ) > sizeof( v )
                     || v[ j ] == "如果上述列項都不符合，請輸入你的看法。" )
                {
                        error ++;
                        break;
                }
        }
        if ( error )
        {
                write( "\n請"HIR"正確"NOR"輸入你的選擇(A、B、C、D...)\n"
                       "如果多選請用分號隔開每個選項。（如：C、E、F）\n" );
                options = ({});    
                input_to( "decide_choice", me, step );
                return;
        }
        answers[step] = options;
        QA_step( step + 1 );
}

void do_refer( string yn, object me )
{
        if ( yn == "Y" || yn == "y" )
        {
                write( "請輸入你目前所在的國家和城市（如：中國北京）" );
                input_to( "query_site", me );
                return;
        }
        if ( yn != "N" && yn != "n" )
        {
                write( "表格已經填寫完畢，請問你是否決定提交？(y/n)\n" );
                input_to( "do_refer", me );
                return;
        }
        answers  = ([]);
        options = ({}); 
        write( "放棄提交。\n重新填寫表格請輸入start指令。\n" );
        return;
}

void done_self_opinion( object me, int step, string text )
{
        options = ({ "self_opinion: " + text });
        answers[step] = options;
        QA_step( step + 1 );
}

void query_site( string site, object me )
{
        if ( !stringp( site ) || site == "" )
        {
                write( "請輸入你目前所在的國家和城市（如：中國北京）\n" );
                input_to( "query_site", me );
                return;
        }
        answers[ "site" ] = site;
        base_name( this_object() )->save_sheet( me, answers );
        write( "答卷已提交，謝謝你的支持！\n" );
        options = ({}); 
}

void save_sheet( object me, mapping answers )
{
        if ( !clonep() )
        {
                restore();
                query("id", sheet[me)]=answers;
                save();
                sheet = ([]);
        }
}