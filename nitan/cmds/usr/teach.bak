
#define TEACH_DIR       "/data/info/"
#define TEACH_FILENAME  "teach.o"

#define MEMBER_D        "/adm/daemons/memberd"
#define INFO_D    "/adm/daemons/infod"

#include <ansi.h>

inherit F_CLEAN_UP;
inherit F_SAVE;

mapping *notes;

string query_save_file()
{
        return TEACH_DIR + TEACH_FILENAME ;
}

int have_new_info()
{
    int i;
    string str,s;

    if (sizeof(notes) < 1)return 0;

    for( i = 0; i < sizeof(notes); i ++)
		if (notes[i]["solve"] == "")return 1;

    return 0;
}

void done_re(object me, int i, string author, string text)
{
        object ob;

	if (! text || ! sizeof(text))return;
		
        if (! notes[i-1])
	{
		tell_object(me, "error 01 回覆失敗，請檢查teach list編號是否已變更。\n");
		return;
	}
	if (notes[i-1]["author"] != author)
	{
		tell_object(me, "error 02 回覆失敗，請檢查teach list編號是否已變更。\n");
		return;
	}
        
        notes[i-1]["msg"] =  notes[i-1]["msg"] + "\n" + 
                             HIR"----------------------------------------------------------------------\n" NOR +
                             HIG + me->query("name") + "(" + me->query("id") + ")回覆於" + 
                             MEMBER_D->bjtime(time(), 1)[0..9] + "\n" NOR + text + "\n";
        
        notes[i-1]["msg"] =  notes[i-1]["msg"] + 
                             HIR"----------------------------------------------------------------------\n\n" NOR;                     
        save();

        tell_object(me, HIG "回覆完畢，如果你確定此問題已解決請使用 teach solve " + i + " 標註！\n");

	// 同時求教者
	ob = find_player(author);
	if (objectp(ob))
	{
		tell_object(ob, BEEP);
                tell_object(ob, HIG + me->query("name") + "(" + me->query("id") + ")回"
                                "復了你的求教信息！請使用 'teach read' 查看。\n" NOR);
	}
	// 發送短消息通知
    INFO_D->send_msg(author, "== 您的求教信息已被回覆 ==\n" + notes[i-1]["msg"] + "\n");

	return;        
}

void do_re(object me, int i)
{
    if (! wizardp(me) && me->query("viremploy/job") != "新手導師")
    {
	write("你沒有權限進行回覆！\n");
	return;
    }

    if( i > sizeof(notes) || i < 1) 
    {
        write("無此編號!\n");
        return 0;
    }

    if ( notes[i-1]["solve"] != "" )
    {
        write(notes[i-1]["solve"] + "已經標誌過啦，不需要再回復!\n");
        return;
    }

    me->edit( (: done_re, me, i, notes[i-1]["author"] :) );

    return;
}

void done_post(object me, mapping note, string text)
{
    int i;
    object *obs;
    object ob;

    if (! text || ! sizeof(text))return;

    note["msg"] = text;
    
    i = sizeof(notes);
    for( ; i > 0; i-- ) 
        if( notes[i-1]["author"] == me->query("id") ) break;
    
    if( ! pointerp(notes) || i > 0 )
    {
        if(! sizeof(notes)) notes = ({ note });
     	else
        {
            notes[i-1]["title"] = note["title"];
            notes[i-1]["author"] = note["author"];
            notes[i-1]["msg"] = note["msg"];
            notes[i-1]["time"] = note["time"];
            notes[i-1]["solve"] = "";
        }
            tell_object(me, HIY "新手求教信息輸入完畢。你的信息已經被加到新手導師通知隊列裏。\n");
            tell_object(me, HIY "你可以先忙你自己的事情，過一段時間後可以用 teach read 查看"
                                "是否解決。\n" NOR);
    }
    else
    {
            notes += ({ note });
            tell_object(me, HIY "新手求教信息輸入完畢。你的信息已經被加到新手導師通知隊列裏。\n");
            tell_object(me, HIY "新手導師正在處理其他玩家，請等待。\n");
            tell_object(me, HIY "你可以先忙你自己的事情，過一段時間後可以用 teach read 查看"
                                "是否解決。\n" NOR);
    }

    save();

    // 通知所有的新手導師
    obs = users();
    foreach(ob in obs)
    { 
            if (ob->query("viremploy/job") == "新手導師")
	    {
                        tell_object(ob, BEEP);
			tell_object(ob, HIG + me->query("name") + "(" + me->query("id") + ")正在向"
                                        "新手導師求教（teach list）。\n" NOR);
            }
    }
    
    return;
}

void list_bug(object me)
{
    int i;
    string str,s;

    if (sizeof(notes) < 1) 
    {
    	write("沒有新手發出求教信息。\n");
	return;
    } 
    s = sprintf(HIW "\n新手發出的求教列表如下:\n" 
                "----------------------------------------------------------------------\n" NOR);

    for( i = 0; i < sizeof(notes); i ++)
    {
        str = sprintf("%d) %-50s %10s %s \n",
                           i + 1, 
                           notes[i]["title"], 
	                   notes[i]["solve"] == "" ? "未解決" : HIG "已解決" NOR " By " + notes[i]["solve"],
                           MEMBER_D->bjtime(notes[i]["time"], 1)[0..9]);
        s = s + str;
    }

    s = s + HIR "\n\n新手導師使用 teach re <編號> 發送解決結果，並將已解決的問題標註。\n\n" NOR;

    me->start_more(s);
}

void do_read(object me, int i) 
{
    string s;

    if( i > sizeof(notes) || i < 1) 
    {
        write("無此編號!\n");
        return;
    }
    s = sprintf("%d) %-50s %10s %s\n"
              "----------------------------------------------------------------------\n"
              "%s",
               i, 
               notes[i-1]["title"], 
               notes[i-1]["solve"]=="" ? "未解決" : HIG "已解決" NOR " By " + notes[i-1]["solve"],
               MEMBER_D->bjtime(notes[i-1]["time"], 1)[0..9],
               notes[i-1]["msg"]);

    me->start_more(s);
}

int search_id(string id)
{
    int i;
    if( ! (i = sizeof(notes)) )return 0;
    for( ; i > 0; i-- ) 
        if( notes[i-1]["author"] == id ) break;

    return i;
}

int do_solve(object me, int i)
{
    if( i > sizeof(notes) || i < 1) 
    {
        write("無此編號!\n");
        return 0;
    }

    if ( notes[i-1]["solve"] != "" )
    {
        write(notes[i-1]["solve"] + "已經標誌過啦!\n");
        return 1;
    }
    notes[i-1]["solve"] = me->query("id");

    save();

    write(HIG "該求教信息已標誌為解決。\n" NOR);

    return 1;
}

int main(object me, string arg)
{
    mapping note;
    object where;
    string s, str,arg1; 
    int i, arg2; 
    int i_re;


	// 先取下面具
	if (me->query_temp("apply/mask_flag"))
	{
		return notify_fail("閣下為何不以真面目示人？\n");
	}

    restore();
    
    if (! arg || arg == "help") 
    {
        if(! wiz_level(me) || arg == "help")
        {
            	tell_object(me, HIY "你正在" HIY MUD_NAME HIY "裏辛苦地挖着泥巴，突然發現不知道該怎麼弄了。\n" NOR);
           	tell_object(me, HIY "你趕緊向新手導師發出緊急求教信號：HELP！！！\n" NOR);
            	where = environment(me);
            	if (! where)
               	    s=sprintf("%s(%s)求教",
                              (string)me->query("name"),
                              (string)me->query("id"));
                else
                    s=sprintf("%s(%s)在%s求教",
                              (string)me->query("name"),
                              (string)me->query("id"),
                              (string)where->query("short"));

            note = allocate_mapping(5);
            note["title"] = s;
            note["author"] = me->query("id"); 
            note["time"] = time();
            note["solve"] = "";
            me->edit( (: done_post, me, note :) );
        }
        else
        {
            list_bug(me);
        }

        return 1;
    } 

    if( sscanf(arg, "%s %s", s, arg1) == 2 ) 
    {
       	    if( ! wiz_level(me) && me->query("viremploy/job") != "新手導師") 
                     return notify_fail("你無此權限，具體使用方法請參閲 help teach \n");

       	    if ( s != "solve" && s != "re" )
                     return notify_fail("格式不對，具體使用方法請參閲 help teach \n");

	    if (s == "re")
	    {
		     sscanf(arg1, "%d", i_re);
		     do_re(me, i_re);
		     return 1;
	    }

            if ( arg1 == "all" )
	    {
                     if( !(i = sizeof(notes)) ) return notify_fail("沒人發出求教信息。\n");
                     for( ; i > 0; i-- )notes[i-1]["solve"] = me->query("id");
		     save();
                     write("所有的求教信息已經解決了。\n");
                     return 1;
            }

            i = search_id(arg1);

            if( i > 0 )
            { 
                     do_solve( me, i );
                     return 1;
            }
    }

    if( sscanf(arg, "%s %d", s, arg2) == 2 ) 
    {

	// 以下默認為"solve"
        if( ! wiz_level(me) && me->query("viremploy/job") != "新手導師") 
                     return notify_fail("你無此權限，具體使用方法請參閲 help teach \n");

        if ( s != "solve")
                     return notify_fail("格式不對，具體使用方法請參閲 help teach \n");

        do_solve( me, arg2 );

        return 1;
    }

    if ( sscanf(arg, "%s", s) == 1 ) 
    {
	    switch(arg)
            {
        	case "read":       
	            if( ! (i = sizeof(notes)) )
        	               return notify_fail("還沒有人發出求教信息！\n");
            	    else 
	   	    {
                        i = search_id( me->query("id") );
                        do_read(me, i);
                    }
                    break;

	        case "list":
         	    if( ! wiz_level(me) && me->query("viremploy/job") != "新手導師") 
				return notify_fail("你無此權限，具體使用方法請參閲 help teach \n");
           	    list_bug(me);
                    break;

        	case "del":
            	    if( ! wiz_level(me) && me->query("viremploy/job") != "新手導師")
                               return notify_fail("你無權刪除求教信息，具體使用方法請參閲 help teach \n");

                    if( !(i = sizeof(notes)) )
                               return notify_fail("沒有人發出求教信息。\n");

           	    for( ; i > 0; i-- ) 
		    {
                         if( "" != notes[i-1]["solve"] )
			 {
                              printf("%s的求教信息已經被刪除了！\n", notes[i-1]["author"]);

                    	      if( sizeof(notes) == 1 ) notes = ({});
                              else if(i == 1) notes = notes[1..sizeof(notes)-1];
                              else if( i == sizeof(notes) ) notes = notes[0..sizeof(notes)-2];
                              else notes = notes[0..i-2] + notes[i..sizeof(notes)-1];
			 }
                    }

                    save();
                    break;

                default:
            	    if( ! wiz_level(me) && me->query("viremploy/job") != "新手導師") 
                            return notify_fail("你無此權限，具體使用方法請參閲 help teach \n");

                    if( sscanf(arg, "%d", i) == 1 )
                    	    do_read( me, i );

                    else if( sscanf( arg, "%s", str ) == 1 ) 
                    {
                    	i = search_id(str);
                   	if( i == 0 ) return notify_fail("無此玩家發出的求教信息！\n");
                    	do_read( me, i );
                    }
             }
    }
    else return notify_fail("指令格式不對，具體使用方法請參閲 help teach \n");

    return 1;
}

int help(object me)
{
        if (! wiz_level(me) && me->query("viremploy/job") != "新手導師")
        write(@HELP
指令格式 : 

teach help: 
這個指令可以讓新手向新手導師求助。
輸入該命令後，系統將提示你輸入求教內容的描述。玩家在這裏
應該將出現的情況和想要請教的內容説清楚，以便讓新手導師幫
助解決。每個玩家只能貼一條求教信息，新的求教信息將覆蓋以
前的輸入。

teach read:
可以用 teach read 閲讀自己貼出的求教信息。

HELP
    );
        else 
write(@HELP
指令格式 :       
           teach help                  ： 發送求教信號給新手導師。
這個指令可以讓新手向新手導師求助。
輸入該命令後，系統將提示你輸入求教內容的描述。玩家在這裏
應該將出現的情況和想要請教的內容説清楚，以便讓新手導師幫
助解決。每個玩家只能貼一條求教信息，新的求教信息將覆蓋以
前的輸入。
           teach read                  ： 閲讀已發送的求教信號及回覆情況。
           teach (list)                ： 顯示系統中目前的新手求教信息。     
           teach <號碼或玩家id>        ： 顯示指定的新手求教信息。           
           teach del                   ： 刪除所有已經標註為“已解決”的信息。
           teach solve <號碼或玩家id>  ： 將指定求教信息標註為“已解決”。
           teach re <號碼>             ： 回覆指定的新手求教信息。

HELP
);
    return 1;
}

