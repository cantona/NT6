// map.c

#include "ansi.h"
#include "/doc/help.h"

inherit F_CLEAN_UP;

string make_color(string map);
string *dirs = ({
        "north",
        "south",
        "east",
        "west",
        "northup",
        "southup",
        "eastup",
        "westup",
        "northdown",
        "southdown",
        "eastdown",
        "westdown",
        "northeast",
        "northwest",
        "southeast",
        "southwest",
        "up",
        "down",
        "enter",
        "out",
});
int main(object me, string arg)
{
        int i, j, jj = 0, k, kk = 0;
        string file,map,name,dest,*search;
        mapping exit1, exit2, exit3;
        object room1, room2, room3, room4;

        seteuid(getuid());
        if (!arg || arg == "here")
        {
                room1 = environment(me);
                if( !(file=query("region", room1)) && !(file=query("outdoors", room1)) )
                {
                        if( mapp(exit1=query("exits", room1)) )
                        {
                                for (i=0; i<sizeof(dirs); i++)
                                {
                                        if(dest = exit1[dirs[i]])
                                        {
                                                if(!(room2 = find_object(dest)))
                                                        room2=load_object(dest);
                                                if( file=query("outdoors", room2) )
                                                        break;
                                                else
                                                {
                                                        if( mapp(exit2=query("exits", room2)) )
                                                        {
                                                                for (j=0; j<sizeof(dirs); j++)
                                                                {
                                                                        if(dest = exit2[dirs[j]])
                                                                        {
                                                                                if(!( room3 = find_object(dest)) )
                                                                                        room3 = load_object(dest);
                                                                                if( file=query("outdoors", room3) )
                                                                                {
                                                                                        jj = 1;
                                                                                        break;
                                                                                }
                                                                                else
                                                                                        if( mapp(exit3=query("exits", room3)) )
                                                                                        {
                                                                                                for (k=0; k<sizeof(dirs); k++)
                                                                                                {
                                                                                                        if(dest = exit3[dirs[k]])
                                                                                                        {
                                                                                                                if(!( room4 = find_object(dest)) )
                                                                                                                        room4 = load_object(dest);
                                                                                                                if( file=query("outdoors", room4) )
                                                                                                                {
                                                                                                                        kk = 1;
                                                                                                                        break;
                                                                                                                }
                                                                                                        }
                                                                                                }
                                                                                        }
                                                                                if (kk == 1)
                                                                                {
                                                                                        jj = 1;
                                                                                        break;
                                                                                }
                                                                        }
                                                                }
                                                        }
                                                }
                                                if (jj == 1) break;
                                        }
                                }
                        }
                        if (i==sizeof(dirs))
                                return notify_fail(HIG"這裡不能查看地圖，請到室外。\n"NOR);
                }
                name=filter_color(query("short", room1));
                if( strsrch(file, "_zone") != -1 )
                        sscanf(file, "%s_zone", file);
                if( file_size("/doc/map/" + file)>0 )
                {
                        if(stringp(map = read_file("/doc/map/" + file)))
                        {
                                //map = make_color(map);
                                map = replace_string(map, name, HBBLU+HIG+name+NOR);
                                me->start_more(color_filter(map));
                                return 1;
                        }
                }
                return notify_fail(HIY"暫時還沒有開放這裡的地圖查詢。\n"NOR);
        }
        else
        {
                if( file_size("/doc/map/" + arg)>0 )
                {
                        if(stringp(map = read_file("/doc/map/" + arg)))
                        {
                                map = make_color(map);
                                me->start_more(color_filter(map));
                                return 1;
                        }
                }
                return notify_fail(HIR"沒有你指定的地圖查詢。請map map查詢地圖冊。\n"NOR);
        }
}

string make_color(string map)
{
        map = replace_string(map, "★", HIR"★"NOR);
        map = replace_string(map, "≒", HIC"≒"NOR);
        map = replace_string(map, "～", HIC"～"NOR);
        map = replace_string(map, "Λ", HIG"Λ"NOR);
        map = replace_string(map, "ψ", GRN"ψ"NOR);
        map = replace_string(map, "♀", HIR"♀"NOR);
        map = replace_string(map, "±", HIM"±"NOR);
        map = replace_string(map, "＋", HIG"＋"NOR);
        map = replace_string(map, "∴", YEL"∴"NOR);
        map = replace_string(map, "□", YEL"□"NOR);
        map = replace_string(map, "□", HIW"□"NOR);
        map = replace_string(map, "＊", MAG"＊"NOR);
        map = replace_string(map, "─", HIY"─"NOR);
        map = replace_string(map, "｜", HIY"｜"NOR);
        map = replace_string(map, "＼", HIY"＼"NOR);
        map = replace_string(map, "／", HIY"／"NOR);
        map = replace_string(map, "↑", HIY"↑"NOR);
        map = replace_string(map, "↓", HIY"↓"NOR);
        map = replace_string(map, "→", HIY"→"NOR);
        map = replace_string(map, "←", HIY"←"NOR);
        map = replace_string(map, "─", HIY"─"NOR);
        map = replace_string(map, "│", HIY"│"NOR);
        map = replace_string(map, "┼", HIY"┼"NOR);
        map = replace_string(map, "┌", HIY"┌"NOR);
        map = replace_string(map, "┐", HIY"┐"NOR);
        map = replace_string(map, "└", HIY"└"NOR);
        map = replace_string(map, "┘", HIY"┘"NOR);
        map = replace_string(map, "┬", HIY"┬"NOR);
        map = replace_string(map, "┴", HIY"┴"NOR);
        map = replace_string(map, "├", HIY"├"NOR);
        map = replace_string(map, "┤", HIY"┤"NOR);
        map = replace_string(map, "-", HIY"-"NOR);
        map = replace_string(map, "~", HIC"~"NOR);
        map = replace_string(map, "|", HIC"|"NOR);
        map = replace_string(map, "@", HIW"@"NOR);
        map = replace_string(map, "*", GRN"@"NOR);
        map = replace_string(map, "<", GRN"<");
        map = replace_string(map, ">", ">"NOR);
        map = replace_string(map, "【", YEL"【");
        map = replace_string(map, "】", "】"NOR);
        map = replace_string(map, "□", CYN"□"NOR);
        map = replace_string(map, "□", CYN"□"NOR);
        return map;
}

int help(object me)
{
        write(@HELP
指令格式：map <參量>

    這個指令用來顯示指定的地圖。地圖冊，請用map map查詢。
    不帶參數或帶的參數是here，則顯示你所在地的地圖。亮紅色表示你所
處之地。

HELP
        );
        return 1;
}
