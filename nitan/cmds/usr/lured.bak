// lured.c

#include <ansi.h>
inherit F_CLEAN_UP;

void hunting(object me);

void create() { seteuid(getuid()); }

int main(object me, string arg)
{
        object yr;
        int t;

        //if (! mapp(query("resource/quarry", environment(me))))
        if (! mapp(query("quarry", environment(me))))
                return notify_fail("這裡看不出有野獸出現的樣子。\n");
 
        if (! objectp(yr = present("you er", me)) || yr->query_amount() < 1 ||
            !query("lure", yr) )
                return notify_fail("你身上沒有誘餌了。\n");    
                
        if (me->is_busy() || me->is_fighting())
                return notify_fail("等你忙完了再說吧！\n");

        if( query_temp("hunting", me) )
                return notify_fail("別著急，再等等！\n");

        message_vision(HIG "$N將" + yr->name() + "放在地上，躲在一旁靜靜守侯著 ……\n" NOR, me);
        yr->add_amount(-1);
        
        t = 3 + random(3);
        
        set_temp("hunting", 1, me);
        set_temp("hunting_env", environment(me), me);

        me->start_call_out((: call_other, __FILE__, "do_hunting", me :), t);
        me->start_busy(t);

        return 1;
}

void do_hunting(object me)
{
        object obq;
        object env;
        string* temp;
        string str;
        mapping quarry;
        int i, point;

        env = environment(me);
        if( env != query_temp("hunting_env", me) )
        {
                delete_temp("hunting", me);
                delete_temp("huning_env", me);
                return;
        }

        //quarry=query("resource/quarry", env);
        quarry=query("quarry", env);
        temp = keys(quarry);
        i = random(sizeof(temp));

        delete_temp("hunting", me);
        delete_temp("hunting_env", me);

        // 獲得幾率判斷是否動物出現
        point = quarry[temp[i]];

        if (random(100) >= point)
        {
                write(HIY "你等了半天卻不見獵物出現，而誘餌已經變質，只好作罷。\n" NOR);
                return;
        }       
        
        obq = new(temp[i]);
        obq->move(env);
        set("owner",query("id",  me), obq);

        switch(random(4))
        {
                case 0:
                        message_vision(HIG "不一會兒，一只" + obq->name() + HIG "竄了出來，將"
                                      "誘餌一口咬在嘴裡。\n" NOR, me);
                        break;

                case 1:
                        message_vision(HIM "轉眼間，一只" + obq->name() + HIM "突然出現，將" 
                                       "誘餌吞進嘴裡。\n" NOR, me);
                        break;

                case 2:
                        message_vision(HIW "良久，一只" + obq->name() + HIW "大搖大擺地走了"
                                       "出來，仔細地打量著誘餌。\n" NOR, me);
                        break;

                default:
                        message_vision(HIC "少時，一只" + obq->name() + HIC "竄了過來，一口將"
                                       "誘餌叼在了嘴上，相貌貪婪之極。\n" NOR, me);
                        break;
        }

        return;
        
}

int help(object me)
{
        write(@HELP
指令格式 :

        lured <誘餌>：在當前地點放置誘餌等待獵物出現。
                      注：一次只能放一個誘餌。
                     
HELP
    );
    return 1;
}
