// meng-zhu.c 罰惡使者

#ifndef NPCDATA
#define NPCDATA "/data/npc/"
#endif
#define SHIZHE NPCDATA + "fa-e"

inherit NPC;
inherit F_UNIQUE;
inherit F_SAVE;

string query_save_file()
{
        return SHIZHE;
}

void create()
{
        seteuid(getuid());

        if (!restore()) {
        set_name("西方月", ({ "fae shizhe", "fae", "shizhe" }) );
        set("title", "罰惡使者" );
        set("gender", "男性" );
        set("age", 35);
      set("long","一位神色嚴峻的中年武人，他就是嫉惡如仇，俠名遠播的武林罰惡使者。\n");
        set("attitude", "heroism");
        set("generation", 0);
        set("winner", "none");

        set("str", 25);
        set("con", 25);
        set("int", 25);
        set("dex", 25);

        set("max_qi", 500);
        set("eff_qi", 500);
        set("qi", 500);
        set("max_jing", 300);
        set("jing", 300);
        set("neili", 500);
        set("max_neili", 500);
        set("jiali", 30);
        set("shen_type", 0);

        set("no_clean_up",1);
        set("combat_exp", 400000);

        set_skill("force",  90); 
        set_skill("unarmed",90);
        set_skill("sword",  90);
        set_skill("dodge",  90);
        set_skill("parry",  90);

        set("weapon", "/d/shaolin/obj/changjian");
        set("armor", "/d/city/obj/cloth");

        setup();

        carry_object("/d/shaolin/obj/changjian")->wield();
        carry_object("/d/city/obj/cloth")->wear();        
        }
        else {
                set("id", "fae");
                set_name(query("name"), ({ query("id") }));
                setup();
                if( query("weapon", query("weapon", this_object()))carry_object(this_object()))->wield();
                if( query("armor", query("armor", this_object()))carry_object(this_object()))->wear();
        }
}

void init()
{
        object me = this_object();

        add_action("do_recopy",  "recopy");
        add_action("do_recover", "recover");
        add_action("do_kill", "kill");

}

int do_kill()
{
        object ob;
        int i;

        command("say 你想謀害本使者，當真是自找死路！ 座下紅衣武士何在！");
        message_vision("四周的紅衣武士羣起對$N發動攻擊！\n", this_player());

        for(i=0; i<4; i++) {
                if( objectp( ob = present("wei shi " + (i+1), environment(this_object())) ) )
                                 ob->kill_ob(this_player());        
                else        this_object()->kill_ob(this_player());                
        }

        return 1;
}

int accept_fight(object ob)
{
        object me, mengzhu, shangshan;
        string name1, name2;
 
        me  = this_object();
                
        if(!( mengzhu = find_living("mengzhu")) )
        mengzhu = load_object("/clone/npc/meng-zhu");
        name1=query("winner", mengzhu);

        if( query("id", this_player()) == name1 )
                return notify_fail("你已經是武林盟主，還要搶當罰惡使者？！\n");

        if(!( shangshan = find_living("shangshan")) )
        shangshan = load_object("/clone/npc/shang-shan");
        name2=query("winner", shangshan);

        if( query("id", this_player()) == name2 )
                return notify_fail("你已經是賞善使者，還要搶當罰惡使者？！\n");

        if( query("winner", me) == query("id", ob) )
         {                 remove_call_out("do_copy");
                call_out("do_copy", 1, me, ob);
                return notify_fail("你跟你自己打什麼架？！\n");
       }

        if (wizardp(this_player()))
                return notify_fail("巫師不能搶使者之位！\n");

        if ( me->is_fighting() ) 
                return notify_fail("已經有人正在挑戰罰惡使者！\n");

        set("eff_qi",query("max_qi",  me), me);
        set("qi",query("max_qi",  me), me);
        set("jing",query("max_jing",  me), me);
        set("neili",query("max_neili",  me), me);

        remove_call_out("checking");
        call_out("checking", 1, me, ob);
        
        return 1;
}

int checking(object me, object ob)
{

        object obj;
        int my_max_qi, his_max_qi;

        my_max_qi=query("max_qi", me);
        his_max_qi=query("max_qi", ob);

        if (me->is_fighting()) {
                if( (query("qi", me)*100/my_max_qi) <= 80 )
                        command("exert recover");

                call_out("checking", 1, me, ob);
                return 1;
        }

        if ( !present(ob, environment()) ) return 1; 

        if( (query("qi", me)*100/my_max_qi) <= 30){
                command("say 佩服佩服，看來我的擔子可以交卸了，恭喜你成為武林罰惡使者！\n");
                command("chat恭喜"+query("name", ob)+"被推舉為現任武林罰惡使者！\n");
                remove_call_out("do_copy");
                call_out("do_copy", 1, me, ob);
                return 1;
        }

        if( (query("qi", ob)*100/his_max_qi)<50){
                command("say 看來" + RANK_D->query_respect(ob) + 
                        "還得多加練習，方能在當今武林中有所作為 !\n");
                return 1;
        }

        return 1;  
}

int do_copy(object me, object ob)
{
        set("winner",query("id",  ob), me);
        addn("generation", 1, me);

        set("name",query("name",  ob), me);
        set("title", "第"+chinese_number(query("generation", me))+"代罰惡使者", me);
        set(query("id", "short",query("title",  me)+""+query("name", me)+"("+capitalize(ob))+")", me);
        delete("title", me);

        delete_temp("apply/short", ob);
        set_temp("apply/short", ({me->short()}), ob);
        
        set("title", "第"+chinese_number(query("generation", me))+"代罰惡使者", me);
        set("short",query("title",  me)+""+query("name", me)+"(faeshizhe)", me);
        delete("title", me);

        remove_call_out("do_clone");
        call_out("do_clone", 0, me, ob);

        return 1;
}

int do_recopy(object me, object ob)
{
        me = this_object();
        ob = this_player();

        if( query("winner", me) != query("id", ob) )
                return notify_fail("你不是現任罰惡使者！\n");;

        set("name",query("name",  ob), me);
        set("title", "第"+chinese_number(query("generation", me))+"代罰惡使者", me);
        set(query("id", "short",query("title",  me)+""+query("name", me)+"("+capitalize(ob))+")", me);
        delete("title", me);

        delete_temp("apply/short", ob);
        set_temp("apply/short", ({me->short()}), ob);

        set("title", "第"+chinese_number(query("generation", me))+"代罰惡使者", me);
        set("short",query("title",  me)+""+query("name", me)+"(faeshizhe)", me);
        delete("title", me);

        remove_call_out("do_clone");
        call_out("do_clone", 0, me, ob);

        write("狀態更新完畢。\n");
        return 1;
}

int do_clone(object me, object ob)
{
        object *inv, new;
        mapping hp_status, skill_status, map_status, prepare_status;
        string *sname, *mname, *pname;
        int i, temp; 

        seteuid( geteuid(me) );

/* delete and copy skills */

        if ( mapp(skill_status = me->query_skills()) ) {
                skill_status = me->query_skills();
                sname  = keys(skill_status);

                temp = sizeof(skill_status);
                for(i=0; i<temp; i++) {
                        me->delete_skill(sname[i]);
                }
        }

        if ( mapp(skill_status = ob->query_skills()) ) {
                skill_status = ob->query_skills();
                sname  = keys(skill_status);

                for(i=0; i<sizeof(skill_status); i++) {
                        me->set_skill(sname[i], skill_status[sname[i]]);
                }
        }
        
/* delete and copy skill maps */

        if ( mapp(map_status = me->query_skill_map()) ) {
                mname  = keys(map_status);

                temp = sizeof(map_status);
                for(i=0; i<temp; i++) {
                        me->map_skill(mname[i]);
                }
        }

        if ( mapp(map_status = ob->query_skill_map()) ) {
                mname  = keys(map_status);

                for(i=0; i<sizeof(map_status); i++) {
                        me->map_skill(mname[i], map_status[mname[i]]);
                }
        }
        
/* delete and copy skill prepares */

        if ( mapp(prepare_status = me->query_skill_prepare()) ) {
                pname  = keys(prepare_status);

                temp = sizeof(prepare_status);
                for(i=0; i<temp; i++) {
                        me->prepare_skill(pname[i]);
                }
        }

        if ( mapp(prepare_status = ob->query_skill_prepare()) ) {
                pname  = keys(prepare_status);

                for(i=0; i<sizeof(prepare_status); i++) {
                        me->prepare_skill(pname[i], prepare_status[pname[i]]);
                }
        }

/* unwield and remove weapon & armor */

        inv = all_inventory(me);
        for(i=0; i<sizeof(inv); i++) {
                destruct(inv[i]);
        }
        set("weapon", 0);
        set("armor", 0);

/* wield and wear weapon & armor */

        inv = all_inventory(ob);
        for(i=0; i<sizeof(inv); i++) {
                if( query("weapon_prop/damage", inv[i])>100
                 || query("armor_prop/armor", inv[i])>100)continue;

                if( query("weapon_prop", inv[i]) && query("equipped", inv[i])){
                        carry_object(base_name(inv[i]))->wield();
                        set("weapon", base_name(inv[i]), me);
                }
                else if( query("armor_prop", inv[i]) && query("equipped", inv[i])){
                        carry_object(base_name(inv[i]))->wear();
                        set("armor", base_name(inv[i]), me);
                }
        }

/* copy entire dbase values */

        hp_status = ob->query_entire_dbase();

                set("str", hp_status["str"], me);
                set("int", hp_status["int"], me);
                set("con", hp_status["con"], me);
                set("dex", hp_status["dex"], me);
                set("age", hp_status["age"], me);

                set("max_qi", hp_status["max_qi"], me);
                set("eff_qi", hp_status["eff_qi"], me);
                set("qi", hp_status["qi"], me);
                set("max_jing", hp_status["max_jing"], me);
                set("eff_jing", hp_status["eff_jing"], me);
                set("jing", hp_status["jing"], me);
                set("max_neili", hp_status["max_neili"], me);
                set("neili", hp_status["neili"], me);
                set("jiali", hp_status["jiali"], me);
                set("gender", hp_status["gender"], me);
                set("combat_exp", hp_status["combat_exp"], me);

        save();

        tell_object(ob, "狀態儲存完畢。\n");

        new = new("/clone/npc/fa-e");
        new->move("/d/taishan/zhengqi");
        destruct(me);

        return 1;
}

int do_recover()
{
        object me, ob;

        me = this_object();
        ob = this_player();

        if( query("winner", me) != query("id", ob) )
                return notify_fail("你不是現任罰惡使者！\n");;

        set("combat_exp",query("combat_exp",  me), ob);

        write("狀態復元完畢。\n");

        return 1;
}