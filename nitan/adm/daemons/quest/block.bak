// 玩家任務守護進程：block.c

// 初步構思：
// 1、由故事系統定時推出雁門關外阻擊故事，喚醒任務守護。
// 2、任務守護進行場景的初始化，移動需要的 NPC 到場景。
// 3、任務守護啟動任務物件，任務物件按照心跳，定時派出
//    契丹武士對場景進行攻擊。
// 4、如果任一契丹武士突破雁門關則宣告阻擊失敗，播放失
//    敗情節故事。
// 5、每殺死一個契丹武士都有一定獎勵，全殲則有追加獎勵，
//    播放成功情節故事。
// 6、玩家也可以站在遼國一方，嘗試殺死參與阻擊的 NPC，
//    成功者同樣有獎勵，若阻擊失敗，則有追加獎勵。

#include <ansi.h>

void startup();

// 新任務能夠在的地點
string *env_room = ({ 
        "/d/yanmen/gate",
        "/d/yanmen/shance",
        "/d/yanmen/shibi",
        "/d/yanmen/luanshi1",
        "/d/yanmen/luanshi2",
        "/d/yanmen/luanshi3",
        "/d/yanmen/luanshi4",
        "/d/yanmen/luanshi5",
        "/d/yanmen/luanshi6",
        "/d/yanmen/luanshi7",
        "/d/yanmen/luanshi8",
        "/d/yanmen/road",
});

string *block_npcs = ({ 
        "/d/yanmen/npc/xuanci",
        "/d/yanmen/npc/zhiguang",
        "/d/yanmen/npc/wangjt",
        "/d/yanmen/npc/wangwy",
        "/d/yanmen/npc/zhaoqs",
        "/d/yanmen/npc/huanghe",
});

// 任務對象創建
void create()
{
        seteuid(getuid());
        if (! clonep() && find_object(QUEST_D)) startup();
}

void start_quest()
{
        object npc;              // 當時操作的NPC對象
        string name;             // 當時操作的NPC文件名字
        string *npcs;            // 總共使用過的NPC對象
        object *obs;             // 目前所有的(BLOCK)任務
        object env;              // 當時操作的房間
        object qob;              // 任務物件
        int i;                   // 有關數值
        int env_count, npc_count;// 統計資料

        // 如果任務已經展開了，那麼不啟動
        obs = children("/clone/quest/block");
        if (arrayp(obs) && sizeof(obs) > 0)
                return;

        if (sizeof(env_room) < 1)
                // 無法找到這樣的地點
                return;

        npcs = block_npcs;
        for (i = 0; i < sizeof(env_room); i++)
        {
                if (! arrayp(npcs) || ! sizeof(npcs))
                        break;

                // 生成一個可用的NPC
                name = npcs[random(sizeof(npcs))];
                if (! objectp(npc = new(name)))
                        continue;
                npcs -= ({ name });
                npc_count++;
                
                // 尋找一個適合的地點
                if (! objectp(env = get_object(env_room[i])))
                        continue;
                npc->move(env);
                npc->set_short_desc("正在" + (random(2) ? "聚精會神" : "大氣不敢喘") +
                                    "地埋伏著。");
                env_count++;
        }
        qob = new("/clone/quest/block");
        qob->init_quest();

        CHANNEL_D->do_channel(find_object(QUEST_D),
                              "sys", "進程(BLOCK)在 " + env_count +
                              HIR " 處地點利用 " + npc_count +
                              HIR " 個 NPC 創建了一個任務。");
}

// 由故事系統喚醒這個進程
void startup()
{
        // 啟動
        if (! find_object(QUEST_D))
                return;

        CHANNEL_D->do_channel(find_object(QUEST_D),
                              "sys", "進程(BLOCK)啟動了。");
        // 啟動時創建任務
        start_quest();
}