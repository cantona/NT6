// 玩家任務守護進程：defend.c

#include <ansi.h>

#define MAX_NUM         15

void startup();
void start_quest();

array familys = ({ 
        "武當派", "華山氣宗", "全真教", "古墓派",
        "靈鷲宮", "桃花島", "關外胡家", "段氏皇族", 
        "峨嵋派", "丐幫", "少林派", "逍遙派", 
        "明教", "華山劍宗","唐門世家",
        "星宿派", "血刀門", "大輪寺", "歐陽世家", 
        "神龍教", "慕容世家", "日月神教", });
        
// 任務對象創建
void create()
{
        seteuid(getuid());
        if (! clonep() && find_object(QUEST_D)) startup();
}

void heart_beat()
{
        if (! find_object(QUEST_D))
                return;

        // 如果可以，每次心跳(4分鐘)產生一個QUEST
        start_quest();
}


// 任務守護進程喚醒這個進程
void startup()
{
        // 啟動
        if (! find_object(QUEST_D))
                return;

        if (! query_heart_beat())
                CHANNEL_D->do_channel(find_object(QUEST_D),
                                      "sys", "進程(DEFEND)啟動了。");

        // 平均每四分鐘產生一個任務
        set_heart_beat(40 + random(20));
}

// 停止這個任務進程
void stop()
{
        set_heart_beat(0);
}

void start_quest()
{
        int i, num; 
        object *users;          // 目前在做這個任務的玩家
        object *obs;            // 目前所有的DEFEND任務
        string family_name;     // 被攻擊的門派名稱
        object qob;             // 任務對象

        // 生成所有可能被攻打的門派（去掉目前被攻打的）
        obs = children("/clone/quest/defend");
        if (arrayp(obs) && sizeof(obs) > 0)
                familys-=query("quest_dfamily", obs);

        // 選取一個當前準備攻打的門派
        if (sizeof(familys) < 1)
                return;               
                
        family_name = familys[random(sizeof(familys))];
        
        // 獲取攻打的人數（根據當時門派在做此任務人數）
        users = filter_array(users(), (: interactive($1) 
                                          && stringp(query("family/family_name", $1) )
                                          && query("family/family_name", $1) == $(family_name):));
                                         /* 
                                          && mapp(query_temp("defend_quest", $1) )
                                          && !query_temp("defend_quest/finish", $1):));
                                         */
        // 數量為做此任務的人數的 1-2 倍
        num = sizeof(users) * (2 + random(2));
        
        // 如果超出了最大敵人數量（防止滿山遍野的敵人）
        if (num > MAX_NUM) num = MAX_NUM;
        // 如果一個都找不到
        if (num <= 0) return;
        
        // 初始化任務的一些信息（啟動地點）
        qob = new("/clone/quest/defend");
        set("quest_dfamily", family_name, qob);

        CHANNEL_D->do_channel(find_object(QUEST_D),
                              "sys", "進程(DEFEND)在" + family_name +
                              HIR "利用" + num + HIR "個敵人創建了一個任務。");

        // 交由任務自己進行初始化
        qob->init_quest(num, family_name);
}
